<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gauri Chaudhari</title>
    <link>https://gaurichaudhari9.github.io/</link>
      <atom:link href="https://gaurichaudhari9.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Gauri Chaudhari</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en</language><copyright>Â© 2024 Gauri Chaudhari</copyright><lastBuildDate>Sat, 27 Jan 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Gauri Chaudhari</title>
      <link>https://gaurichaudhari9.github.io/</link>
    </image>
    
    <item>
      <title></title>
      <link>https://gaurichaudhari9.github.io/post/2024-01-27-.html</link>
      <pubDate>Sat, 27 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/post/2024-01-27-.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>Interactive Housing Sales Analytics Dashboard</title>
      <link>https://gaurichaudhari9.github.io/project/interactive-housing-sales-analytics-dashboard.html</link>
      <pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/project/interactive-housing-sales-analytics-dashboard.html</guid>
      <description>&lt;p&gt;This dashboard visualizes and analyzes housing sales data for King County, Washington. The dashboard features a calendar widget, line chart, map, histograms, and a heatmap, providing a user-friendly interface to explore the dataset. The purpose is to understand trends in housing prices and identify relationships between price and other attributes like number of bedrooms/bathrooms, square footage, view, condition, etc.&lt;/p&gt;
&lt;p&gt;The dashboard allows users to filter the data by month and day to see how prices change over time. Additional filters for year built, square feet living area, and square feet lot area allow further slicing of the data.&lt;/p&gt;
&lt;h2 id=&#34;analysis&#34;&gt;Analysis&lt;/h2&gt;
&lt;p&gt;The dashboard consists of the following visualizations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Line chart showing average price over time&lt;/li&gt;
&lt;li&gt;Map showing average price by ZIP code, colored by price&lt;/li&gt;
&lt;li&gt;Histogram showing distribution of house prices&lt;/li&gt;
&lt;li&gt;Histograms for distribution of number of bedrooms and bathrooms&lt;/li&gt;
&lt;li&gt;Heatmap showing average price by view and condition&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The visualizations allow us to identify trends like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prices increasing over time&lt;/li&gt;
&lt;li&gt;Areas with higher concentrations of expensive houses&lt;/li&gt;
&lt;li&gt;Most houses having 2-4 bedrooms and 1-3 bathrooms&lt;/li&gt;
&lt;li&gt;Higher prices for better views and conditions&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;instructions&#34;&gt;Instructions&lt;/h2&gt;
&lt;p&gt;The dashboard can be filtered in the following ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select month and day from calendar to filter all visualizations to that time period&lt;/li&gt;
&lt;li&gt;Use sliders for year built, square feet living area, and square feet lot area to filter the bottom 4 visualizations&lt;/li&gt;
&lt;li&gt;Hover over marks in the visualizations to see more details&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The dashboard is interactive and allows slicing data in different ways to uncover insights.&lt;/p&gt;
&lt;h2 id=&#34;dashboard&#34;&gt;Dashboard&lt;/h2&gt;
&lt;p&gt;To learn more about the dashboard click on the github icon at the top and to view the dashboard click on the tableau button at the top.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Investigating Transfer Learning and Scratch Training for Image Recognition</title>
      <link>https://gaurichaudhari9.github.io/project/investigating-transfer-learning-and-scratch-training-for-image-recognition.html</link>
      <pubDate>Fri, 08 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/project/investigating-transfer-learning-and-scratch-training-for-image-recognition.html</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;This project explores image classification using convolutional neural networks (CNNs). The goal is to classify images into three categories - apparel, chairs, and footwear.
The project covers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data collection and labeling&lt;/li&gt;
&lt;li&gt;Splitting data into train, validation, and test sets&lt;/li&gt;
&lt;li&gt;Building input pipelines with data augmentation&lt;/li&gt;
&lt;li&gt;Fine-tuning a pretrained CNN model (ResNet50)&lt;/li&gt;
&lt;li&gt;Training a CNN from scratch&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;data-collection-and-labeling&#34;&gt;Data Collection and Labeling&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Collected over 100 images per class (apparel, chairs, footwear) using a phone camera&lt;/li&gt;
&lt;li&gt;Labeled images and assigned category labels - 0 for apparel, 1 for chairs, 2 for footwear&lt;/li&gt;
&lt;/ul&gt;
&lt;img width=&#34;950&#34; alt=&#34;image&#34; src=&#34;https://github.com/gaurichaudhari9/image-classification-cnn/assets/25304556/2ca49bb5-52c8-45b3-b3dc-119e6ae70705&#34;&gt;
&lt;h2 id=&#34;data-splitting&#34;&gt;Data Splitting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Split data into 60% train, 20% validation, 20% test per class&lt;/li&gt;
&lt;li&gt;Copied split data into separate folders for train, validation, and test&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;input-pipeline-and-data-augmentation&#34;&gt;Input Pipeline and Data Augmentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Used Keras image_dataset_from_directory to load images as datasets&lt;/li&gt;
&lt;li&gt;Added random flips and rotations for data augmentation&lt;/li&gt;
&lt;li&gt;Defined a pipeline that applies these data augmentation to each element of the training data set in parallel.&lt;/li&gt;
&lt;li&gt;I am also using &lt;code&gt;_prefetch_&lt;/code&gt; to avoid I/O blocking.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fine-tuning-resnet50&#34;&gt;Fine-tuning ResNet50&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Used transfer learning with pretrained ResNet50 model&lt;/li&gt;
&lt;li&gt;Froze base layers, added GlobalAveragePooling and Dense layers&lt;/li&gt;
&lt;li&gt;Achieved &lt;strong&gt;98.46% test accuracy&lt;/strong&gt; after 5 epochs of fine-tuning&lt;/li&gt;
&lt;/ul&gt;
&lt;img width=&#34;903&#34; alt=&#34;image&#34; src=&#34;https://github.com/gaurichaudhari9/image-classification-cnn/assets/25304556/368f5c47-9ddd-4c0b-bd51-79b38c3fcaa0&#34;&gt;
&lt;img width=&#34;1138&#34; alt=&#34;image&#34; src=&#34;https://github.com/gaurichaudhari9/image-classification-cnn/assets/25304556/6b3a9ecb-9306-4298-ae38-dcf4016a1ad3&#34;&gt;
&lt;h2 id=&#34;training-cnn-from-scratch&#34;&gt;Training CNN from Scratch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Built a CNN model with convolutional, pooling, batch norm, dropout layers&lt;/li&gt;
&lt;li&gt;Trained for 10 epochs using Adam optimizer&lt;/li&gt;
&lt;li&gt;Achieved &lt;strong&gt;70%&lt;/strong&gt; test accuracy&lt;/li&gt;
&lt;li&gt;Training a model from scratch on a small dataset makes it difficult to learn robust features compared to fine-tuning a pretrained model. More data would be needed to improve accuracy.&lt;/li&gt;
&lt;/ul&gt;
&lt;img width=&#34;653&#34; alt=&#34;image&#34; src=&#34;https://github.com/gaurichaudhari9/image-classification-cnn/assets/25304556/026072da-1c90-40f0-92e4-0c5616043d96&#34;&gt;
&lt;img width=&#34;1121&#34; alt=&#34;image&#34; src=&#34;https://github.com/gaurichaudhari9/image-classification-cnn/assets/25304556/94613fbd-466d-4004-b224-01b63ea2df8a&#34;&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This project demonstrated classifying images using CNNs. Fine-tuning a pretrained CNN model like ResNet50 achieved high accuracy given the small dataset size. Training a CNN from scratch produced decent but lower accuracy. Overall, the models were able to effectively classify the apparel, chair, and footwear images.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Dataset collected using a phone camera. Location: Indiana University Bloomington Campus&lt;/li&gt;
&lt;li&gt;Models built with TensorFlow/Keras&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Classifying TV Show Quotes using BERT</title>
      <link>https://gaurichaudhari9.github.io/project/classifying-tv-show-quotes-with-bert.html</link>
      <pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/project/classifying-tv-show-quotes-with-bert.html</guid>
      <description>&lt;p&gt;I worked on an NLP classification project to distinguish quotes from two popular TV shows - Star Wars and Friends. The goal was to train a model to accurately categorize unseen quotes as belonging to one show or the other.&lt;/p&gt;
&lt;h2 id=&#34;the-adventure-begins&#34;&gt;The Adventure Begins&amp;hellip;&lt;/h2&gt;
&lt;p&gt;Every good quest starts with assembling a crew. I needed to gather a dataset of quotes from the two shows. This required venturing out into the wilderness of the internet to scrape relevant quotes from fan sites using &lt;strong&gt;selenium&lt;/strong&gt; and &lt;strong&gt;beautifulSoup&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;After gathering over 100 quotes from each show, it was time to &lt;strong&gt;wrangle the unruly data&lt;/strong&gt; into a form suitable for ML models. I cleaned and preprocessed the quotes, adding labels to denote the source show.
python&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;quotes[&#39;label&#39;] = 0 # Star Wars
quotes[&#39;label&#39;] = 1 # Friends
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;training-time&#34;&gt;Training Time&lt;/h2&gt;
&lt;p&gt;Now for the fun part - &lt;strong&gt;teaching a model to discern quote origins&lt;/strong&gt;! I turned to the mighty BERT architecture and leveraged a pretrained model. BERT has oozed NLP knowledge from consuming piles of text data. I just needed to fine-tune it with my quotes.&lt;/p&gt;
&lt;p&gt;First, I had to &lt;strong&gt;encode the text&lt;/strong&gt; into numeric tokens that BERT digests:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;tokenizer = BertTokenizer.from_pretrained(&#39;bert-base-uncased&#39;)

encoded_quotes = tokenizer(quotes, 
                           padding=True,
                           truncation=True,
                           return_tensors=&#39;tf&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I compiled a BERT model, fitted it on the training quotes, and evaluated it on a held-out test set.&lt;/p&gt;
&lt;h2 id=&#34;the-journeys-end&#34;&gt;The Journey&amp;rsquo;s End&lt;/h2&gt;
&lt;p&gt;After fine-tuning the BERT model on the quote dataset, it was time to evaluate its performance and see how well it learned to classify the quotes.
I tested the model on a held-out set of 40 quotes that it had never seen before - 20 Star Wars and 20 Friends. This would give an unbiased estimate of its real-world accuracy.
The model achieved an overall test accuracy of &lt;strong&gt;80%!&lt;/strong&gt; This exceeded my expectations considering the small dataset size.
Digging deeper into the results:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Precision for Star Wars quotes was 82% and Friends 78%&lt;/li&gt;
&lt;li&gt;Recall for Star Wars was 85% and Friends 75%
The confusion matrix showed the model struggled slightly more with Friends quotes - mistaking 5 of them for Star Wars.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;This may be because Star Wars quotes have more distinct language like &amp;ldquo;Use the force&amp;rdquo; and mentions of &amp;ldquo;Jedi&amp;rdquo;. Whereas Friends has more everyday conversational quotes that are harder to classify.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Overall though, BERT was successfully able to learn distinguishing features between the two classes with moderate success.&lt;/p&gt;
&lt;p&gt;There is definitely scope to improve accuracy further with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A larger dataset for better generalization&lt;/li&gt;
&lt;li&gt;Trying different pretrained models like RoBERTa&lt;/li&gt;
&lt;li&gt;Hyperparameter tuning - learning rate, epochs etc.&lt;/li&gt;
&lt;li&gt;Regularization techniques like dropout to reduce overfitting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But as a first attempt, I am pleased with the model&amp;rsquo;s capabilities. It can classify unseen quotes with 80% accuracy - not bad!
This was a fun first adventure in training BERT for text classification. I&amp;rsquo;m excited to keep exploring how transformers can be applied to NLP tasks going forward.&lt;/p&gt;
&lt;p&gt;Until next time, may the force be with you!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A brief primer on scientific and mathematical notations</title>
      <link>https://gaurichaudhari9.github.io/post/2020-12-01-primer-scientific.html</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/post/2020-12-01-primer-scientific.html</guid>
      <description>


&lt;p&gt;As I finished writing the final draft of my first first author paper, &lt;a href=&#34;https://www.biorxiv.org/content/10.1101/2020.05.11.084798v1&#34;&gt;survClust&lt;/a&gt;, there were a lot of other firsts! In my opinion writing the methods and a crisp conclusion and discussion were the difficult parts.&lt;/p&gt;
&lt;p&gt;Below, I share my notes that really came in handy while I was writing the methods section of my manuscript.&lt;/p&gt;
&lt;div id=&#34;what-this-is&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What this is?&lt;/h2&gt;
&lt;p&gt;Notes on how to describe a statistical methodology. Some basic rules and notations that you should keep in mind.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;scientific-notations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Scientific notations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Random variables are usually written in uppercase roman letters: &lt;span class=&#34;math inline&#34;&gt;\(X,Y\)&lt;/span&gt;, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Probability density functions (pdfs) and probability mass functions are denoted by lowercase letters, e.g. &lt;span class=&#34;math inline&#34;&gt;\(f_{(x)}\)&lt;/span&gt;, or &lt;span class=&#34;math inline&#34;&gt;\(f_{X}(x)\)&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cumulative distribution functions (cdfs) are denoted by uppercase letters, e.g. &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt;, or &lt;span class=&#34;math inline&#34;&gt;\(F_{X}(x)\)&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&#39;s summarize the above three points with an example -&lt;/p&gt;
&lt;p&gt;A random variable &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; has density &lt;span class=&#34;math inline&#34;&gt;\(f_{X}\)&lt;/span&gt; as follows -&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ Pr[a\leq X\leq b]=\int _{a}^{b}f_{X}(x)\,dx\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Hence, if &lt;span class=&#34;math inline&#34;&gt;\(F_{X}\)&lt;/span&gt; is the cumulative distribution function of &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; then:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[F_{X}(x)=\int _{-\infty }^{x}f_{X}(u)\,du,\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f_{X}(x)={\frac {d}{dx}}F_{X}(x).\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now, let&#39;s go over some quick statistical nitty-gritties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Greek letters &lt;span class=&#34;math inline&#34;&gt;\(\theta, \beta\)&lt;/span&gt; are commonly used to denote unknown parameters.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Placing a hat, or caret, over a true parameter denotes an estimator of it, e.g., &lt;span class=&#34;math inline&#34;&gt;\(\widehat {\theta }\)&lt;/span&gt; is an estimator for &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt; .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Building on the above point the &lt;strong&gt;sample&lt;/strong&gt; mean, variance and correlation coefficient are denoted as &lt;span class=&#34;math inline&#34;&gt;\(\bar{x}, s^2, r\)&lt;/span&gt; respectively. On the other hand &lt;strong&gt;population&lt;/strong&gt; parameters are represented as follows - population mean &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;, population variance &lt;span class=&#34;math inline&#34;&gt;\(\sigma^2\)&lt;/span&gt;, and population correlation as &lt;span class=&#34;math inline&#34;&gt;\(\rho\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Finally most of the time you will need to know the following writing notions while drafting the methods section of your manuscript&lt;/strong&gt; -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Input or independent variables are denoted by &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;, output or dependent variables are denoted by &lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;, and qualitative outputs by &lt;span class=&#34;math inline&#34;&gt;\(G\)&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; is a vector, annotate its values by subscripts &lt;span class=&#34;math inline&#34;&gt;\(X_j\)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Observed values are written in lowercase; hence the &lt;span class=&#34;math inline&#34;&gt;\(i^{th}\)&lt;/span&gt; observed value of &lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt; is written as &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt;, where &lt;span class=&#34;math inline&#34;&gt;\(x_i\)&lt;/span&gt; is a scalar or vector.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Matrices are represented by bold uppercase letters; for example a matrix &lt;span class=&#34;math inline&#34;&gt;\(\textbf{X}\)&lt;/span&gt;, with dimensions &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; x &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; i.e a set of &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; input &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;-vectors. In general, vectors will not be bold, except when they have &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt; components; Note that all vectors are assumed to be column vectors.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&#39;s break it down with an example -&lt;/p&gt;
&lt;p&gt;Given a vector of inputs &lt;span class=&#34;math inline&#34;&gt;\(\textbf{X}^T = (X_1,X_2,...,X_p)\)&lt;/span&gt;, we predict the output &lt;span class=&#34;math inline&#34;&gt;\(\textbf{Y}\)&lt;/span&gt; via a simple linear regression -&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\hat{\textbf{Y}} = \hat\beta_0 + \sum_{n=1}^{p} \textbf{X}_{j}\hat\beta_{j}\]&lt;/span&gt; Or writing this in a vector form as an inner product - &lt;span class=&#34;math inline&#34;&gt;\(\hat{\textbf{Y}} = \textbf{X}^T\hat\beta\)&lt;/span&gt; To solve this we need to estimate a value of &lt;span class=&#34;math inline&#34;&gt;\(\beta\)&lt;/span&gt; such that it minimizes the Residual Sum of Squares or RSS as follows -&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[RSS(\beta) =  \sum_{i=1}^{N} (y_i - x_{i}^T\beta)^2\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Or in matrix notation we can write it as,&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[RSS(\beta) =  (\textbf{y} - \textbf{X}\beta)^T(\textbf{y} - \textbf{X}\beta)\]&lt;/span&gt; where &lt;span class=&#34;math inline&#34;&gt;\(\textbf{X}\)&lt;/span&gt; is an &lt;span class=&#34;math inline&#34;&gt;\(N Ã p\)&lt;/span&gt; matrix with each row an input vector, and &lt;span class=&#34;math inline&#34;&gt;\(\textbf{y}\)&lt;/span&gt; is an &lt;span class=&#34;math inline&#34;&gt;\(N\)&lt;/span&gt;-vector of the outputs. See how &lt;span class=&#34;math inline&#34;&gt;\(\textbf{y}\)&lt;/span&gt; is in bold in the above question.&lt;/p&gt;
&lt;p&gt;Or take one of your favorite papers, and try to go over its methods section to iron and figure out other key details!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>panelmap at WSDS, 2020</title>
      <link>https://gaurichaudhari9.github.io/talk/wsds2020.html</link>
      <pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/talk/wsds2020.html</guid>
      <description>&lt;p&gt;Analysis of clusters in a population is one of the ways to understand the heterogeneity within a cohort. We introduce, panelmap, a data visualization tool for viewing grouped data and its differentiated features in a single and multi-panel layout. panelmap t is a visual aid for understanding associations and trends in data at a glance instead of tabular representation or trying to infer multiple plots. It provides rich source of functions to annotate, perform statistical tests and other descriptive summaries to understand distribution of features across clusters. It can automate legend, annotate missingness and allows various customizations to the user for generating rich and publication quality visualizations.
A multi-panel layout function, circomap, for more than one cohort is also available. circomap, arranges more than one panelmaps in a circular layout, conveying information across various datasets.
panelmap is written in R and is available on GitHub at 
&lt;a href=&#34;https://github.com/arorarshi/panelmap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/arorarshi/panelmap&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BIRSBIO 2020 Hackathon</title>
      <link>https://gaurichaudhari9.github.io/talk/birs2020.html</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/talk/birs2020.html</guid>
      <description>&lt;p&gt;scNMT seq data encompasses rich information across the transcriptome and epigenome avenues capturing the stages of mouse gastrulation. This data set was challenging in terms of missingness and integration across various data types like RNA transcripts, DNA accessibility and DNA methylation, to understand their role independently and as a cross play with each other defining biological functions.&lt;/p&gt;
&lt;p&gt;We wish to address the problem of identifying localized molecular signatures with respect to an outcome of interest, like stage and lineage. This poses an interesting challenge as in to understand heterogeneity in a population by not unsupervised clustering followed by hypothesis testing, but in a more targeted fashion where the cluster solutions are more meaningful and driven by outcome of interest&lt;/p&gt;
&lt;p&gt;MOSAIC, or Multi Omic Supervised Integrative Clustering, is a supervised clustering algorithm, inspired from survClust. The primary advantage of such a supervised or weighted approach is that the final clusters are robust and more meaningful in terms of outcome of interest. Our approach downplays the unrelated features and only keeps the contribution from associated features, making it resistant to noise from other data trends. It also provides a novel approach to deal with samples that have missing data across data types, where in most cases the analysis would be reduced to samples with complete data. MOSAIC on the other hand can handle missing data and tries to retain maximum number of samples.&lt;/p&gt;
&lt;p&gt;MOSAIC analysis results can be found here - 
&lt;a href=&#34;https://github.com/arorarshi/scNMT_seq_MOSAIC&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/arorarshi/scNMT_seq_MOSAIC&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Academic Hugo Theme via Blogdown: Few more details and deployment (part 2)</title>
      <link>https://gaurichaudhari9.github.io/post/2020-05-12-academic-hugo-part2.html</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/post/2020-05-12-academic-hugo-part2.html</guid>
      <description>


&lt;p&gt;This is in continuation to a post I wrote - &lt;a href=&#34;https://arorarshi.rbind.io/post/2020-04-24-academic-hugo-tutorial.html&#34;&gt;Academic Hugo Theme via Blogdown: Where to start?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After setting up a basic website with &lt;code&gt;About&lt;/code&gt;, &lt;code&gt;Skills&lt;/code&gt; and &lt;code&gt;Experience&lt;/code&gt; pages. You are now ready to deploy it and implement some cool customization!&lt;/p&gt;
&lt;div id=&#34;deployment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Deployment&lt;/h1&gt;
&lt;p&gt;I am deploying my site, the one you are reading this post on :), on &lt;strong&gt;Netlify&lt;/strong&gt; and then using a free subdomain with &lt;a href=&#34;https://github.com/rbind/support&#34;&gt;&lt;code&gt;rbind.io&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;whats-the-difference&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Whatâs the difference?&lt;/h2&gt;
&lt;p&gt;Generally you need to buy a domain to host web pages, but with &lt;a href=&#34;https://www.netlify.com/&#34;&gt;Netlify&lt;/a&gt; you can use their web hosting service, with their domain and be live on the internet! It is free, however you can choose your own subdomain.&lt;/p&gt;
&lt;p&gt;Setting up on &lt;strong&gt;Netlify&lt;/strong&gt; is super easy -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;log in to Netlify via GitHub and select the repository where you have all the website files
&lt;ul&gt;
&lt;li&gt;Netlify deployment works on both private and public repositories&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set up the &lt;code&gt;HUGO_VERSION&lt;/code&gt; accordingly. Check the version you are using in Rstudio via &lt;code&gt;blogdown::hugo_version()&lt;/code&gt; command.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once you deploy, Netlify will assign a random subdomain ending in &lt;code&gt;netlify.app&lt;/code&gt; or &lt;code&gt;netlify.com&lt;/code&gt;, for instance I got &lt;code&gt;infallible-poitras-1234-netlify.app&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;IMPORTANT&lt;/strong&gt; bit, after you have deployed your website on Netlify, change the &lt;code&gt;baseurl&lt;/code&gt; parameter in &lt;code&gt;config.toml&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;You can change the subdomain and keep the &lt;code&gt;netlify.app&lt;/code&gt;. Or you can apply for a &lt;code&gt;rbind.io&lt;/code&gt; domain name.
&lt;ul&gt;
&lt;li&gt;Just open an issue on their &lt;a href=&#34;https://github.com/rbind/support&#34;&gt;GitHub repository&lt;/a&gt;, and fill their template form. They are quick and will get back to you soon!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, everytime you commit to GitHub, Netlify will trigger a deploy. However, you can change this automatic trigger. &lt;strong&gt;ALSO&lt;/strong&gt;, remember to run &lt;code&gt;blogdown::build_site()&lt;/code&gt; before each commit, as this updates the &lt;code&gt;public&lt;/code&gt; folder, which is used by Netlify to publish.&lt;/p&gt;
&lt;p&gt;For step by step instructions to Netlify, check this post &lt;a href=&#34;https://alison.rbind.io/post/2017-06-12-up-and-running-with-blogdown/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://gaurichaudhari9.github.io/img/post2_fig1.png&#34; alt=&#34;Psst.. what do you mean by domain and subdomain&#34; id=&#34;id&#34; class=&#34;class&#34; style=&#34;width:60.0%&#34; style=&#34;height:60.0%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Psst.. what do you mean by domain and subdomain&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;redirects&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Redirects&lt;/h2&gt;
&lt;p&gt;To redirect all HTTP traffic to HTTPs, use a redirects file. I placed a file called &lt;code&gt;_redirects&lt;/code&gt; here -&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;static
  |=== _redirects &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It contains this -&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://arorarshi.rbind.io/*&#34; class=&#34;uri&#34;&gt;http://arorarshi.rbind.io/*&lt;/a&gt; &lt;a href=&#34;https://arorarshi.rbind.io/:splat&#34; class=&#34;uri&#34;&gt;https://arorarshi.rbind.io/:splat&lt;/a&gt; 301!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also explained &lt;a href=&#34;https://yihui.org/en/2017/11/301-redirect/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now moving on to the cool stuff with customization!ð&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;customizations&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Customizations&lt;/h1&gt;
&lt;div id=&#34;favicon&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Favicon&lt;/h2&gt;
&lt;p&gt;A &lt;code&gt;favicon&lt;/code&gt; is a website icon or a tab icon on the left hand side in a tab. For example mine is a sun :). To get one for yourself, just select &lt;code&gt;favicon&lt;/code&gt; image of your choice and place it here -&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;assets
  |=== images 
    |=== filename.png&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;color-and-fonts&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Color and Fonts&lt;/h2&gt;
&lt;p&gt;Academic template is really good and it already comes with great inbuilt &lt;a href=&#34;https://sourcethemes.com/academic/themes/&#34;&gt;themes&lt;/a&gt; like - &lt;em&gt;Apogee, Minimal, Forest, Rose&lt;/em&gt; etc. Themes can be specified here -&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;config
  |=== params.toml &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;with the variable &lt;code&gt;theme&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you want to create your own color and font template, use any of the the existing themes and open the file here -&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;themes
  |=== hugo-academic 
    |=== data
      |=== themes &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each theme has its own &lt;code&gt;.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;The colors are specified as &lt;code&gt;HTML&lt;/code&gt; codes for &lt;code&gt;Primary&lt;/code&gt;, &lt;code&gt;Menu&lt;/code&gt; sections and so on. I used &lt;a href=&#34;https://htmlcolorcodes.com/color-picker/&#34;&gt;this&lt;/a&gt; to pick colors!&lt;/p&gt;
&lt;p&gt;Towards the end of the &lt;code&gt;.toml&lt;/code&gt; file, there will be a &lt;code&gt;font&lt;/code&gt; parameter. Font &lt;code&gt;.toml&lt;/code&gt; files are present here -&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;themes
  |=== hugo-academic 
    |=== data
      |=== fonts &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I used Google fonts and you can specify them as they appear in their web address. Check out other &lt;code&gt;.toml&lt;/code&gt; files to get a hang of it!&lt;/p&gt;
&lt;p&gt;As always &lt;strong&gt;Rinse and Repeat&lt;/strong&gt; Or restart the R session and &lt;code&gt;blogdown::build_site()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;p&gt;1.&lt;a href=&#34;https://alison.rbind.io/post/2017-06-12-up-and-running-with-blogdown/&#34; class=&#34;uri&#34;&gt;https://alison.rbind.io/post/2017-06-12-up-and-running-with-blogdown/&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://getemoji.com/&#34; class=&#34;uri&#34;&gt;https://getemoji.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Academic Hugo Theme via Blogdown: Where to start?</title>
      <link>https://gaurichaudhari9.github.io/post/2020-04-24-academic-hugo-tutorial.html</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/post/2020-04-24-academic-hugo-tutorial.html</guid>
      <description>


&lt;p&gt;Setting up a personal website is fun and a great way to reach visibility. Whether its your work, skills, or other hobbies, they all can reach the light of day in one platform!&lt;/p&gt;
&lt;p&gt;I will go over building websites via &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;blogdown&lt;/a&gt; with &lt;a href=&#34;https://themes.gohugo.io/academic/&#34;&gt;Hugoâs Acadmeic&lt;/a&gt; theme as a template. Though Yihuiâs blogdown tutorial is the ultimate Holy Grail. I wanted to write a simple tutorial about getting started with a quick and easy website without getting overwhelmed :)&lt;/p&gt;
&lt;div id=&#34;getting-started&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;0. Getting Started&lt;/h1&gt;
&lt;p&gt;By running the following commands in R:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#set up
install.packages(&amp;#39;blogdown&amp;#39;) 
library(&amp;quot;blogdown&amp;quot;)
blogdown::install_hugo()
#start creating a website by new_site()!
blogdown::new_site(theme = &amp;quot;gcushen/hugo-academic&amp;quot;)
#I have passed the academic theme above

#view your website locally
blogdown::build_site()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OK. This created a bunch of files in your directory, and created a static website, something like &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34;&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an exhaustive overview of how the Academic template looks like. We donât need all of these functionalities, and we can only retain what we like.&lt;/p&gt;
&lt;p&gt;If you mess up something, original GitHub code is available &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34;&gt;here&lt;/a&gt; for your reference.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;whats-going-on&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;1. Whatâs going on?&lt;/h1&gt;
&lt;p&gt;A lot!&lt;/p&gt;
&lt;p&gt;First place I would recommend trying is getting familiar with &lt;code&gt;.md&lt;/code&gt; files present here &lt;code&gt;your website folder &amp;gt; content &amp;gt; home&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;https://gaurichaudhari9.github.io/img/post1_fig1.png&#34; alt=&#34;We are looking at this&#34; id=&#34;id&#34; class=&#34;class&#34; style=&#34;width:60.0%&#34; style=&#34;height:60.0%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;We are looking at this&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Each .md file here is a functionality/widget of the Academic theme. For example, if you see the skills section of the website has icons in rows, experience section is in a bullet-timeline format, and so on. They are all controlled by the files here, and are displayed by logical &lt;code&gt;active=true/false&lt;/code&gt; as follows-&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# About widget.
widget = &amp;quot;about&amp;quot;  # See https://sourcethemes.com/academic/docs/page-builder/
headless = true  # This file represents a page section.
active = true  # Activate this widget? true/false
#&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If &lt;code&gt;active=FALSE&lt;/code&gt; widget is suppressed and displayed if &lt;code&gt;TRUE&lt;/code&gt;. Start by turning everything &lt;code&gt;FALSE&lt;/code&gt; except -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;about.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skills.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;experience.md&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, note the &lt;code&gt;weight&lt;/code&gt; section in the &lt;code&gt;.md&lt;/code&gt; script. This is the order in which widgets will get displayed on your website. For example, the bubbles image background at the very top has &lt;code&gt;weight=1&lt;/code&gt; as seen in &lt;code&gt;slider.md&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-the-hang-of-it&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;2. Getting the hang of it?&lt;/h1&gt;
&lt;p&gt;After turning off all the widgets, except &lt;code&gt;about.md, skills.md&lt;/code&gt; and &lt;code&gt;experience.md&lt;/code&gt; (you donât have to delete others, and might want to store them for later). You will have the bare bones of your website.&lt;/p&gt;
&lt;p&gt;Now start filling in some details. The &lt;code&gt;about.md&lt;/code&gt; file points to &lt;code&gt;content -&amp;gt; authors -&amp;gt; admin -&amp;gt; _index.md&lt;/code&gt; file, from where it stores and displays all that information. Fill it up with your own deets!&lt;/p&gt;
&lt;p&gt;Same goes for &lt;code&gt;skills.md&lt;/code&gt; and &lt;code&gt;eperience.md&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;config.toml-and-config-folder&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;3. config.toml and config folder&lt;/h1&gt;
&lt;p&gt;I use &lt;code&gt;config.toml&lt;/code&gt; for all my settings, and as the name says &lt;code&gt;config&lt;/code&gt; details. Remaining stuff like menu details go to &lt;code&gt;config -&amp;gt; _default -&amp;gt; menus.toml&lt;/code&gt;, and &lt;code&gt;params.toml&lt;/code&gt; for all website settings like theme, color, and other settings. (You wonât need a lot to start with)&lt;/p&gt;
&lt;div id=&#34;menus.toml&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;menus.toml&lt;/h2&gt;
&lt;p&gt;This is the easy part! This just contains the menu buttons you want to see at the top of your website. Though everything is published on your website in a long-ish format. Here, the menu buttons at the top will help the viewer to navigate to key sections. Use the widgets you want to appear here like follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;[[main]]
  name = &amp;quot;Projects&amp;quot;
  url = &amp;quot;#projects&amp;quot;
  weight = 30
  
[[main]]
  name = &amp;quot;Posts&amp;quot;
  url = &amp;quot;#posts&amp;quot;
  weight = 40

  # and so on&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In my website &lt;code&gt;about&lt;/code&gt; and &lt;code&gt;skills&lt;/code&gt; are at weight &lt;code&gt;10&lt;/code&gt; and &lt;code&gt;20&lt;/code&gt;, and thatâs why &lt;code&gt;projects&lt;/code&gt; has weight &lt;code&gt;30&lt;/code&gt;. Menu items follow the same order and weights as the widgets as well. You can change that! Weights just determine the order of appearance in the &lt;code&gt;menu&lt;/code&gt; section.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;config.toml&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;config.toml&lt;/h2&gt;
&lt;p&gt;Here, I have everything as default except-&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;baseurl = &amp;quot;https://arorarshi.rbind.io/&amp;quot;
title = &amp;quot;Arshi Arora&amp;quot;
copyright = 

paginate = 10  # Number of items per page in paginated lists.
enableEmoji = true

sharing = true

#fixing image in posts 
#this just puts the image used in your rmarkdown posts to appropriate folder, so that it doesn&amp;#39;t appear broken on website. confused? you can skip for now. 
uglyurls = true
#[permalinks]
# post = &amp;quot;/:year/:month/:day/:slug/&amp;quot;

[blackfriday] bit
#this is only needed for .md files. Pandoc is better for .Rmd. Maybe remove later but for now I have it in. &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;params.toml&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;params.toml&lt;/h2&gt;
&lt;p&gt;For a basic setup, you donât need to worry about this.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;rinse-and-repeat&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;4. Rinse and Repeat&lt;/h1&gt;
&lt;p&gt;Keep adding interesting details about yourself and playing around with the widgets. I will add deployment and other intricate details in the next post!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34; class=&#34;uri&#34;&gt;https://bookdown.org/yihui/blogdown/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>MS Comp Bio Lightning Talk, CMU</title>
      <link>https://gaurichaudhari9.github.io/talk/cmu_lightning_2020.html</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/talk/cmu_lightning_2020.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>ISMCO (2019)</title>
      <link>https://gaurichaudhari9.github.io/talk/ismco_2019.html</link>
      <pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/talk/ismco_2019.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://gaurichaudhari9.github.io/slides/example.html</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/slides/example.html</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-academic&#34;&gt;Create slides in Markdown with Academic&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt; | 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
   One 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   **Two** 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   Three 
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://spectrum.chat/academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>survClust poster TCGA Legacy: Multi-Omics studies in cancer  (2018)</title>
      <link>https://gaurichaudhari9.github.io/talk/tcga_symposium_2018.html</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/talk/tcga_symposium_2018.html</guid>
      <description>&lt;p&gt;Integrated molecular classification has led to the discovery of new classification systems in individual cancer types, as well as pan-cancer patterns driven by cell-of-origin or shared molecular alterations across cancer types. In order to consider clinical outcomes (such as treatment response and survival) simultaneously in tumor classification, we developed a new algorithm called SurvClust for supervised clustering. The algorithm learns a weighted distance matrix from each molecular data type with effect sizes as weights. To facilitate integration, quantile normalization is utilized to standardize the distance vectors. Multidimensional scaling (MDS) is then used to map the subjects into an n-dimensional space that preserves between-subject distances for clustering. Application to the TCGA pan-cancer datasets revealed survival associations driven by mutation burden and specific mutation and co- mutation patterns of cancer driving genes. We will further demonstrate SurvClustâs utility by integrating treatment responses and toxicity profiles in immunotherapy-treated lung, melanoma, and bladder cancer cohorts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example journal article</title>
      <link>https://gaurichaudhari9.github.io/publication/journal-article.html</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/publication/journal-article.html</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>https://gaurichaudhari9.github.io/publication/conference-paper.html</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://gaurichaudhari9.github.io/publication/conference-paper.html</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
